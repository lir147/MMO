from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
import asyncio
from characters import Warrior, Mage, Archer
from loot import loot_table

API_TOKEN = "7774994899:AAFZn45Q9uW5ts4SWC9WVypK7yf_eTFMH4I"

bot = Bot(token=API_TOKEN)
dp = Dispatcher()
players = {}

# –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
GAME_SCREEN_IMAGE = "https://i.imgur.com/your_game_screen.png"

# –í—ã–±–æ—Ä –∫–ª–∞—Å—Å–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
@dp.message(Command("start"))
async def start(message: types.Message):
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="‚öîÔ∏è –í–æ–∏–Ω", callback_data="class_warrior")],
        [types.InlineKeyboardButton(text="ü™Ñ –ú–∞–≥", callback_data="class_mage")],
        [types.InlineKeyboardButton(text="üèπ –õ—É—á–Ω–∏–∫", callback_data="class_archer")]
    ])
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–ª–∞—Å—Å–∞
async def class_selection(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    name = callback.from_user.first_name

    if callback.data == "class_warrior":
        players[user_id] = Warrior(name)
        class_name = "–í–æ–∏–Ω"
    elif callback.data == "class_mage":
        players[user_id] = Mage(name)
        class_name = "–ú–∞–≥"
    elif callback.data == "class_archer":
        players[user_id] = Archer(name)
        class_name = "–õ—É—á–Ω–∏–∫"
    else:
        return

    player = players[user_id]
    keyboard = game_menu()
    await callback.message.answer_photo(
        photo=GAME_SCREEN_IMAGE,
        caption=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {name}! –í–∞—à –∫–ª–∞—Å—Å: {class_name}\n"
                f"‚ù§Ô∏è HP: {player.health}  ‚ö° MP: {player.mana}  üó°Ô∏è –°–∏–ª–∞: {player.strength}\n"
                f"üõ°Ô∏è –õ–æ–≤–∫–æ—Å—Ç—å: {player.agility}  üß† –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç: {player.intelligence}\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=keyboard
    )

# –ú–µ–Ω—é –∏–≥—Ä–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
def game_menu():
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
        [
            types.InlineKeyboardButton("üó∫Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç—É", callback_data="show_map"),
            types.InlineKeyboardButton("‚öîÔ∏è –ü–æ–ª—É—á–∏—Ç—å –ª—É—Ç", callback_data="get_loot")
        ],
        [
            types.InlineKeyboardButton("üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å", callback_data="show_inventory"),
            types.InlineKeyboardButton("üîÑ –ü–µ—Ä—Å–æ–Ω–∞–∂", callback_data="show_character")
        ]
    ])
    return keyboard

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∏–≥—Ä–µ
async def game_actions(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    player = players.get(user_id)
    if not player:
        await callback.message.answer("–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
        return

    if callback.data == "show_map":
        await callback.message.answer_photo(
            photo=GAME_SCREEN_IMAGE,
            caption="üåç –í–∞—à–∞ –∫–∞—Ä—Ç–∞. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=game_menu()
        )
    elif callback.data == "get_loot":
        item = loot_table.get_random_item()
        if item:
            player.inventory.append(item)
            await callback.message.answer(f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–ª—É—á–∏–ª–∏: {item.name}")
        else:
            await callback.message.answer("üíÄ –ü—Ä–µ–¥–º–µ—Ç –Ω–µ –≤—ã–ø–∞–ª.")
    elif callback.data == "show_inventory":
        if player.inventory:
            items = "\n".join([i.name for i in player.inventory])
            await callback.message.answer(f"üì¶ –í–∞—à–∏ –ø—Ä–µ–¥–º–µ—Ç—ã:\n{items}")
        else:
            await callback.message.answer("üì≠ –í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç.")
    elif callback.data == "show_character":
        await callback.message.answer(
            f"üßë‚Äçüíª –ü–µ—Ä—Å–æ–Ω–∞–∂: {player.name}\n"
            f"‚ù§Ô∏è HP: {player.health}\n"
            f"‚ö° MP: {player.mana}\n"
            f"üó°Ô∏è –°–∏–ª–∞: {player.strength}\n"
            f"üõ°Ô∏è –õ–æ–≤–∫–æ—Å—Ç—å: {player.agility}\n"
            f"üß† –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç: {player.intelligence}\n"
            f"üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: {len(player.inventory)} –ø—Ä–µ–¥–º–µ—Ç–æ–≤"
        )

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
dp.callback_query.register(class_selection, lambda c: c.data.startswith("class_"))
dp.callback_query.register(game_actions, lambda c: c.data in ["show_map","get_loot","show_inventory","show_character"])

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    asyncio.run(dp.start_polling(bot))
